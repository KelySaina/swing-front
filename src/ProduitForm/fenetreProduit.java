/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ProduitForm;

import com.google.gson.JsonArray;
import com.google.gson.JsonElement;
import com.google.gson.Gson;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ramandimbinirina
 */
public class fenetreProduit extends javax.swing.JFrame {
    private DefaultTableModel tableModel;
    private String numP;
    /**
     * Creates new form fenetreProduit
     */
    public fenetreProduit() {
        initComponents();
        
        tableModel = new DefaultTableModel(
                new Object[][] {}, // Initial data (empty in this case)
                new String[] { "NumProduit", "Designation", "Prix", "Quantite", "Montant" }
        );
        jTable1.setModel(tableModel);
        
        refreshTable();
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldDesignation = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldPrix = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldQuantite = new javax.swing.JTextField();
        jButtonAjouter = new javax.swing.JButton();
        jButtonModifier = new javax.swing.JButton();
        jButtonSupprimer = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabelMontantMin = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabelMontantMax = new javax.swing.JLabel();
        jLabelMontantTot = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NumProduit", "Designation", "Prix", "Quantite", "Montant"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Integer.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setText("Designation");

        jLabel2.setText("Prix");

        jLabel3.setText("Quantite");

        jButtonAjouter.setText("Ajouter");
        jButtonAjouter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAjouterActionPerformed(evt);
            }
        });

        jButtonModifier.setText("Modifier");
        jButtonModifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModifierActionPerformed(evt);
            }
        });

        jButtonSupprimer.setText("Supprimer");
        jButtonSupprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSupprimerActionPerformed(evt);
            }
        });

        jLabel4.setText("Montant minimal:");

        jLabel5.setText("Montant maximal:");

        jLabelMontantMin.setText("jLabel6");

        jLabel7.setText("Montant total:");

        jLabelMontantMax.setText("jLabel6");

        jLabelMontantTot.setText("jLabel6");

        jLabel6.setText("L'unite est l'Ariary");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldDesignation, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldQuantite, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldPrix, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 296, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButtonSupprimer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonAjouter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonModifier, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(121, 121, 121))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelMontantMin)
                        .addGap(95, 95, 95)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelMontantMax)
                        .addGap(50, 50, 50)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelMontantTot))
                    .addComponent(jLabel6))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextFieldDesignation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonAjouter))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldPrix, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonModifier))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextFieldQuantite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonSupprimer)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabelMontantMin)
                    .addComponent(jLabel7)
                    .addComponent(jLabelMontantMax)
                    .addComponent(jLabelMontantTot))
                .addGap(42, 42, 42))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAjouterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAjouterActionPerformed
        // TODO add your handling code here:
        String numProduit = "P"+String.valueOf((int)Math.floor(Math.random()*1001));
        String designation = jTextFieldDesignation.getText();
        double prix = Double.parseDouble(jTextFieldPrix.getText());
        int quantite = Integer.parseInt(jTextFieldQuantite.getText());

        Gson gson = new Gson();
        
        ModelProduit mp = new ModelProduit(numProduit, designation, prix, quantite, prix*quantite);
        
        String json = gson.toJson(mp);
        
        System.out.println(json);
        
        
        dataProduit data = new dataProduit();
        
        data.sendData(json);  
  
        refreshTable();
        
        jTextFieldDesignation.setText("");
        jTextFieldPrix.setText("");
        jTextFieldQuantite.setText("");
        
        
    }//GEN-LAST:event_jButtonAjouterActionPerformed

    private void jButtonSupprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSupprimerActionPerformed
        // TODO add your handling code here:
        String designation = jTextFieldDesignation.getText();
        double prix = Double.parseDouble(jTextFieldPrix.getText());
        int quantite = Integer.parseInt(jTextFieldQuantite.getText());
        Gson gson = new Gson();
        
        ModelProduit mp = new ModelProduit(numP, designation, prix, quantite, prix*quantite);
        
        String json = gson.toJson(mp);
        
        dataProduit data = new dataProduit();
        
        data.deleteData(json);
        
        refreshTable();
        
        jTextFieldDesignation.setText("");
        jTextFieldPrix.setText("");
        jTextFieldQuantite.setText("");
        
        
    }//GEN-LAST:event_jButtonSupprimerActionPerformed

    private void jButtonModifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModifierActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        String designation = jTextFieldDesignation.getText();
        double prix = Double.parseDouble(jTextFieldPrix.getText());
        int quantite = Integer.parseInt(jTextFieldQuantite.getText());
        Gson gson = new Gson();
        
        ModelProduit mp = new ModelProduit(numP, designation, prix, quantite, prix*quantite);
        
        String json = gson.toJson(mp);
        
        dataProduit data = new dataProduit();
        
        data.editData(json);
        
        refreshTable();
        
        jTextFieldDesignation.setText("");
        jTextFieldPrix.setText("");
        jTextFieldQuantite.setText("");
        
        
    }//GEN-LAST:event_jButtonModifierActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        int selectedRow = jTable1.getSelectedRow();
        Object designation = jTable1.getValueAt(selectedRow, 1);
        jTextFieldDesignation.setText(String.valueOf(designation)); // Set the designation field to the value
        Object prix = jTable1.getValueAt(selectedRow, 2);
        jTextFieldPrix.setText(String.valueOf(prix));
        Object quantite = jTable1.getValueAt(selectedRow, 3);
        jTextFieldQuantite.setText(String.valueOf(quantite));

        Object numProduit = jTable1.getValueAt(selectedRow, 0);
        numP = String.valueOf(numProduit);
    }//GEN-LAST:event_jTable1MouseClicked
    
    private void refreshTable() {
        // Fetch updated data
        dataProduit data = new dataProduit();
        JsonArray allData = data.getAllData();

        // Clear the existing data in the table model
        tableModel.setRowCount(0);

        // Initialize variables for min, max, and total montant
        double minMontant = Double.MAX_VALUE;
        double maxMontant = Double.MIN_VALUE;
        double totalMontant = 0.0;

        // Populate the table model with the updated data and compute min, max, and total montant
        Gson gson = new Gson();
        for (JsonElement jE : allData) {
            ModelProduit mp = gson.fromJson(jE, ModelProduit.class);
            Object[] rowData = { mp.getNumProduit(), mp.getDesignation(), mp.getPrix(), mp.getQuantite(), mp.getMontant() };
            tableModel.addRow(rowData);

            // Update min and max montant
            if (mp.getMontant() < minMontant) {
                minMontant = mp.getMontant();
            }
            if (mp.getMontant() > maxMontant) {
                maxMontant = mp.getMontant();
            }

            // Update total montant
            totalMontant += mp.getMontant();
        }

        // Print or use min, max, and total montant as needed
        jLabelMontantMin.setText( String.valueOf(minMontant));
        jLabelMontantMax.setText( String.valueOf(maxMontant));
        jLabelMontantTot.setText( String.valueOf(totalMontant));
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(fenetreProduit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(fenetreProduit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(fenetreProduit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(fenetreProduit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new fenetreProduit().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAjouter;
    private javax.swing.JButton jButtonModifier;
    private javax.swing.JButton jButtonSupprimer;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabelMontantMax;
    private javax.swing.JLabel jLabelMontantMin;
    private javax.swing.JLabel jLabelMontantTot;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextFieldDesignation;
    private javax.swing.JTextField jTextFieldPrix;
    private javax.swing.JTextField jTextFieldQuantite;
    // End of variables declaration//GEN-END:variables
}
